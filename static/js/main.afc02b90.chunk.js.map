{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","a","fetch","fetchedList","json","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uVAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,UACJC,IAAK,wBAAwBH,EAAMI,QAAQC,GAAG,2BAClD,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCLbC,G,MAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLtBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCAZG,G,wDACJ,aAAc,IAAD,8BACZ,gBAaDH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACXb,SAAS,GACTU,YAAY,IAJF,E,4FAQb,8BAAAI,EAAA,sEAC4BC,MAAM,8CADlC,cACQC,EADR,gBAEyBA,EAAYC,OAFrC,OAEQjB,EAFR,OAGEkB,KAAKT,SAAS,CAACT,aAHjB,gD,0EAUA,WAEE,MAAgCkB,KAAKL,MAA9Bb,EAAP,EAAOA,SAAUU,EAAjB,EAAiBA,YACXS,EAAmBnB,EAASoB,QAAQ,SAAAzB,GAAO,OAC/CA,EAAQE,KAAKwB,cAAcC,SAASZ,EAAYW,kBAGpD,OACE,sBAAK7B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAcc,KAAKd,eAErB,cAAC,EAAD,CAAUJ,SAAUmB,W,GAjCRI,cAsCHhB,IClCAiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.afc02b90.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props)=>(\r\n    <div className='card-container'>\r\n        <img \r\n            alt='monster'\r\n            src={'https://robohash.org/'+props.monster.id+'?set=set2&size=180x180'}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);\r\n    \r\n","import React from 'react';\r\nimport {Card} from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className='card-list'>\r\n            {props.monsters.map(monster=> (\r\n                <Card key={monster.id} monster={monster}/>\r\n            ))}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input \r\n        className='search'\r\n        type='search' \r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n);","import React, {Component} from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\n\nimport { SearchBox } from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n   super();\n   this.state = {\n     monsters:[],\n     searchField:''\n   } \n  }\n\n  async componentDidMount(){\n    const fetchedList = await fetch('https://jsonplaceholder.typicode.com/users');\n    const monsters = await fetchedList.json();\n    this.setState({monsters});\n  }\n\n  handleChange = e => {\n    this.setState({searchField:e.target.value});\n  }\n\n  render(){\n\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter( monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n  return(\n    <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox \n        placeholder='search monster'\n        handleChange={this.handleChange}\n      />\n      <CardList monsters={filteredMonsters}/>\n    </div>\n  )}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}